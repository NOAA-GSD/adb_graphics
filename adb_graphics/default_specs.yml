# This file contains the defaults for the graphics for each variable. 
#
# Acceptable keys for a variable:
#
#   clevs: specifies the contour levels by one of the following methods
#      - a list with no quotes
#      - a numpy.arange specified as "!!python/object/apply:numpy.arange [list]"
#        with quotes. Specify "list" as with numpy.anumpy.arange() like this --
#        [[start, ]stop[, increment]]]. start and increment are options.
#      - the name of a function to be called that will return a list.
#
#   cmap: name of Python colormap
#
#   colors: name of function that defines a list of colors
#
#   contour: specifies a field to be contoured, and must come from same level
#
#   layer: for arrays with multiple fields stacked in the vertical,
#          provide the desired level
#
#   ncl_name: the name of the variable as expected by NCL
#
#   ticks: the number of tick marks on the colorbar
#
#   title: a string representing a title to override the standard variable name
#          and level
#
#   transform: name of a function that will perform a given transformation of
#              the variable. To access the UPPData methods, provide only the name
#              of the method. To call a function from a module, use the syntax
#              "module.function"
#
#   transform_kwargs: the contents form a quaternary level of yaml heirarchy
#                     with keys corresponding to transform function arguments,
#                     and their values.
#
#   unit: the resulting unit of the variable
#
#   wind: a boolean variable that switches on/off the wind barbs drawn from the
#         wind at the same level, OR a string specifying the key for the desired
#         wind level
#
#
# A few conventions must be followed for adding variables to this file.
#
#   Naming:
#      The variable name chosen here is the short name as specified by the
#      graphics file naming convention. This is imposed by the Python class
#      loading this file. Please add a comment to describe the variable when
#      adding it here.
#
#   Order:
#      Each set of items should be in alphabetical order for ease of code
#      maintenance, unless some other order makes more sense, i.e. a section
#      anchor needs to be applied before another section.
#

acpcp: # Accumulated precipitation
  sfc: # Not yet supported
    clevs: [0.01, 0.1, 0.25, 0.5, 1, 2, 3, 5, 10, 15, 20, 40]
    cmap: gist_ncar
    colors: accumulated_precip_colors
    contour_colors: grey
    ncl_name: APCP_P8_L1_GLC0_acc{fhr}h
    ticks: 0
    transform: conversions.kgm2_to_in
    unit: in
cape:
  mu: &cape # Most Unstable CAPE
    clevs: [1, 100, 500, 1000, 1500, 2000, 2500, 3000, 3500, 4000, 4500, 5000]
    cmap: gist_ncar
    colors: vort_colors
    layer: 2
    ncl_name: CAPE_P0_2L108_GLC0
    ticks: 0
    title: Most Unstable CAPE
    unit: J/kg
  mul: # Most Unstable Layer CAPE
    <<: *cape
    layer: 1
    ncl_name: CAPE_P0_2L108_GLC0
    title: Most Unstable Layer CAPE
  mx90mb: # Lowest 90 mb Mixed Layer CAPE
    <<: *cape
    layer: 0
    ncl_name: CAPE_P0_2L108_GLC0
    title: Lowest 90 mb Mixed Layer CAPE
  sfc:
    <<: *cape
    ncl_name: CAPE_P0_L1_GLC0
    title: Surface CAPE
cell: # Storm cell motion
  ua:
    ncl_name: USTM_P0_2L103_GLC0
    transform: [vector_magnitude, conversions.ms_to_kt]
    transform_kwargs:
      field2: VSTM_P0_2L103_GLC0
    unit: kt
ceil: # Ceiling
  ua: &ceil
    clevs: [0, 0.1, 0.3, 0.5, 1, 2, 3, 5, 10, 15, 20, 30, 60]
    cmap: gist_ncar
    colors: ceil_colors
    ncl_name: HGT_P0_L215_GLC0
    ticks: 0
    title: Ceiling
    transform: [field_diff, conversions.m_to_kft]
    transform_kwargs:
      variable2: gh
      level2: sfc
    unit: kft agl
ceilexp: # Ceiling - experimental
  ua:
    <<: *ceil
    ncl_name: CEIL_P0_GLC0
    title: Ceiling (exp)
ceilexp2: # Ceiling - experimental no.2
  ua:
    <<: *ceil
    ncl_name: CEIL_P0_L2_GLC0
    title: Ceiling (exp-2)
cin: # Surface Convective Inhibition
  mu:
    ncl_name: CIN_P0_2L108_GLC0
    layer: 2
    unit: J/kg
  sfc:
    clevs: [-300, -200, -150, -100, -75, -50, -40, -30, -20, -10, -1]
    cmap: gist_ncar
    colors: cin_colors
    ncl_name: CIN_P0_L1_GLC0
    ticks: 0
    title: Surface CIN
    unit: J/kg
cloud_cover:
  high: &cld_cover
    clevs: [2, 5, 10, 20, 30, 40, 50, 60, 70, 80, 90, 95]
    cmap: gist_ncar
    colors: cldcov_colors
    ncl_name: HCDC_P0_L234_GLC0
    ticks: 0
    title: High-Level Cloud Cover
    unit: '%'
  low:
    <<: *cld_cover
    ncl_name: LCDC_P0_L214_GLC0
    title: Low-Level Cloud Cover
  mid:
    <<: *cld_cover
    ncl_name: MCDC_P0_L224_GLC0
    title: Mid-Level Cloud Cover
  total:
    <<: *cld_cover
    ncl_name: TCDC_P0_L10_GLC0
    title: Total Cloud Cover
cref: # Composite reflectivity
  sfc: &refl
    clevs: !!python/object/apply:numpy.arange [5, 76, 5]
    cmap: NWSReflectivity
    colors: cref_colors
    ncl_name: REFC_P0_L10_GLC0
    ticks: 5
    unit: dB
ctop: # Cloud top height
  ua:
    clevs: !!python/object/apply:numpy.arange [0, 61, 5]
    cmap: gist_ncar
    colors: ceil_colors
    ncl_name: HGT_P0_L3_GLC0
    ticks: 0
    title: Cloud Top Height
    transform: [conversions.m_to_kft]
    unit: kft asl
dewp: # Dew point temperature
  2m:
    clevs: [-60, -50, -40, -30, -20, -10, 0, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 80, 90, 100, 110, 120]
    cmap: Carbone42_r
    colors: dewp_colors
    contour_colors: grey
    ncl_name: DPT_P0_L103_GLC0
    ticks: -4
    transform: conversions.k_to_f
    unit: F
    wind: 10m
G113bt: # GOES-W Brightness temperature, water vapor (Ch 3)
  sat: &goes_sat
    clevs: !!python/object/apply:numpy.arange [-80, 41, 1]
    cmap: WVCIMSS_r
    colors: goes_colors
    ncl_name: SBT113_P0_L8_GLC0
    ticks: -10
    title: GOES-W Brightness Temperature, Water Vapor
    transform: conversions.k_to_c
    unit: ch 3
G114bt: # GOES-W Brightness temperature, infrared (Ch 4)
  sat:
    <<: *goes_sat
    ncl_name: SBT114_P0_L8_GLC0
    title: GOES-W Brightness Temperature, Infrared
    unit: ch 4
G123bt: # GOES-E Brightness temperature, water vapor (Ch 3)
  sat:
    <<: *goes_sat
    ncl_name: SBT123_P0_L8_GLC0
    title: GOES-E Brightness Temperature, Water Vapor
G124bt: # GOES-E Brightness temperature, infrared (Ch 4)
  sat:
    <<: *goes_sat
    ncl_name: SBT124_P0_L8_GLC0
    title: GOES-E Brightness Temperature, Infrared
    unit: ch 4
gh: # Geopotential height
  500mb: &ua_gh
    clevs: !!python/object/apply:numpy.arange [6, 990, 6]
    cmap: precipitation
    colors: terrain_colors
    ncl_name:
      prs: HGT_P0_L100_GLC0
      nat: HGT_P0_L105_GLC0
    ticks: 4
    transform: conversions.m_to_dm
    unit: dm
  700mb:
    <<: *ua_gh
    clevs: !!python/object/apply:numpy.arange [201, 373, 3]
  850mb:
    <<: *ua_gh
    clevs: !!python/object/apply:numpy.arange [3, 600, 3]
  925mb:
    <<: *ua_gh
    clevs: !!python/object/apply:numpy.arange [3, 600, 3]
  sfc:
    <<: *ua_gh
    clevs: !!python/object/apply:numpy.arange [0, 5000, 250]
    ncl_name: HGT_P0_L1_GLC0
    ticks: 0
    transform: []
    unit: gpm
  ua:
    <<: *ua_gh
gust:
  10m:
    clevs: !!python/object/apply:numpy.arange [5, 95, 5]
    cmap: gist_ncar
    colors: wind_colors
    ncl_name: GUST_P0_L1_GLC0
    ticks: 5
    transform: conversions.ms_to_kt
    unit: kt
hlcy: # Helicity
  in16: &hlcy # Hourly updraft helicity over 1-6 km layer
    clevs: !!python/object/apply:numpy.arange [25, 301, 25]
    cmap: gist_ncar
    colors: hlcy_colors
    layer: 1
    ncl_name: UPHL_P0_2L103_GLC0
    ticks: 25
    title: 1-6km Updraft Helicity
    unit: m2/s2
  in25: # Hourly updraft helicity over 2-5 km layer
    <<: *hlcy 
    layer: 0
    ncl_name: UPHL_P0_2L103_GLC0
    title: 2-5km Updraft Helicity
  mx02: # Hourly maximum of updraft helicity over 0-2 km layer
    <<: *hlcy 
    clevs: !!python/object/apply:numpy.arange [12.5, 150.5, 12.5]
    layer: 0
    ncl_name: MXUPHL_P8_2L103_GLC0_max1h
    ticks: 12.5
    title: 0-2km Max Updraft Helicity (over prv hr)
  mx03: # Hourly maximum of updraft helicity over 0-3 km layer
    <<: *hlcy 
    clevs: !!python/object/apply:numpy.arange [12.5, 150.5, 12.5]
    layer: 1
    ncl_name: MXUPHL_P8_2L103_GLC0_max1h
    ticks: 12.5
    title: 0-3km Max Updraft Helicity (over prv hr)
  mx16: # Hourly maximum of updraft helicity over 1-6 km layer
    <<: *hlcy
    layer: 3
    title: 1-6km Max Updraft Helicity (over prv hr)
    ncl_name: MXUPHL_P8_2L103_GLC0_max1h
  mx25: # Hourly maximum of updraft helicity over 2-5 km layer
    <<: *hlcy
    layer: 2
    ncl_name: MXUPHL_P8_2L103_GLC0_max1h
    title: 2-5km Max Updraft Helicity (over prv hr)
  sr01:
    layer: 0
    ncl_name: HLCY_P0_2L103_GLC0
    unit: $m^2 / s^2$
  sr03:
    layer: 1
    ncl_name: HLCY_P0_2L103_GLC0
    unit: $m^2 / s^2$
lcl: # Lifted condensation level
  sfc: &lcl
    clevs: !!python/object/apply:numpy.arange [0, 5000, 250]
    cmap: rainbow
    colors: lcl_colors
    contour_colors: white
    ncl_name: HGT_P0_L5_GLC0
    ticks: -2
    title: Lifted Condensation Level Height
    transform: field_diff
    transform_kwargs:
      variable2: gh
      level2: sfc
    unit: m agl
  ua:
    <<: *lcl
    unit: m
li: # Lifted Index
  sfc:
    ncl_name: LFTX_P0_2L100_GLC0
    unit: K
  best:
    ncl_name: 4LFTX_P0_2L108_GLC0
    unit: K
lpl: # Lifted parcel level
  ua:
    ncl_name: PLPL_P0_2L108_GLC0
    transform: conversions.pa_to_hpa
    unit: hPa
mref: # Maximum reflectivity for past hour at 1 km AGL
  sfc:
    <<: *refl
    ncl_name: MAXREF_P8_L103_GLC0_max1h
    title: Max 1km agl Reflectivity (over prev hr)
pres:
  sfc:
    clevs: !!python/object/apply:numpy.arange [650, 1051, 4]
    cmap: gist_ncar
    colors: ps_colors
    ncl_name: PRES_P0_L1_GLC0
    ticks: 20
    transform: conversions.pa_to_hpa
    unit: hPa
  msl:
    clevs: !!python/object/apply:numpy.arange [650, 1051, 4]
    cmap: gist_ncar
    colors: ps_colors
    ncl_name: MSLMA_P0_L101_GLC0
    ticks: 20
    transform: conversions.pa_to_hpa
    unit: hPa
  ua:
    ncl_name: PRES_P0_L105_GLC0
ptmp: # Potential temperature
  2m:
    clevs: !!python/object/apply:numpy.arange [210, 350, 5]
    cmap: jet
    colors: t_colors
    ncl_name: POT_P0_L103_GLC0
    ticks: 10
    unit: K
    wind: 10m
pwtr: # Precipitable water
  sfc:
    clevs: !!python/object/apply:numpy.arange [4, 81, 4]
    cmap: gist_ncar
    colors: pw_colors
    ncl_name: PWAT_P0_L200_GLC0
    ticks: 4
    unit: mm
ref: # Maximum reflectivity for past hour at 1 km AGL
  m10:
    <<: *refl
    ncl_name: REFD_P0_L20_GLC0
    title: -10C Isothermal Reflectivity
  maxm10:
    <<: *refl
    ncl_name: REFD_P8_L20_GLC0_max1h
    title: Max 1h -10C Isothermal Reflectivity
rh: # Relative Humidity
  2m: &rh
    clevs: [10, 20, 30, 40, 50, 60, 70, 80, 90, 95, 100, 105]
    cmap: gist_ncar
    colors: rh_colors
    ncl_name: RH_P0_L103_GLC0
    ticks: 10
    unit: '%'
  500mb:
    <<: *rh
    ncl_name: RH_P0_L100_GLC0
  700mb:
    <<: *rh
    ncl_name: RH_P0_L100_GLC0
  850mb:
    <<: *rh
    ncl_name: RH_P0_L100_GLC0
shear:
  01km: &shear # 0-1 km
    ncl_name: VUCSH_P0_2L103_GLC0
    layer: 1
    transform: vector_magnitude
    transform_kwargs:
      field2: VVCSH_P0_2L103_GLC0
      layer: 1
    unit: $s^{-1}$
  06km: # 0-6 km
    <<: *shear
    layer: 0
soilt: # Soil Temperature
  sfc: &soilt_levs
    clevs: !!python/object/apply:numpy.arange [240, 311, 10]
    cmap: gist_ncar
    colors: soilt_colors
    layer: 0
    ncl_name: TSOIL_P0_2L106_GLC0
    ticks: 0
    title: Soil Temperature at Sfc
    unit: K
  1cm:
    <<: *soilt_levs
    layer: 1
    title: Soil Temperature at 1cm
  4cm:
    <<: *soilt_levs
    layer: 2
    title: Soil Temperature at 4cm
  10cm:
    <<: *soilt_levs
    layer: 3
    title: Soil Temperature at 10cm
  30cm:
    <<: *soilt_levs
    layer: 4
    title: Soil Temperature at 30cm
  60cm:
    <<: *soilt_levs
    layer: 5
    title: Soil Temperature at 60cm
  1m:
    <<: *soilt_levs
    layer: 6
    title: Soil Temperature at 1m
  1.6m:
    <<: *soilt_levs
    layer: 7
    title: Soil Temperature at 1.6m
  3m:
    <<: *soilt_levs
    layer: 8
    title: Soil Temperature at 3m
soilw: # Soil Moisture
  sfc: &soilw_levs
    clevs: !!python/object/apply:numpy.arange [0.0, 0.61, 0.1]
    cmap: gist_ncar
    colors: soilw_colors
    layer: 0
    ncl_name: SOILW_P0_2L106_GLC0
    ticks: 0
    title: Soil Moisture at Sfc
    unit: fraction
  1cm:
    <<: *soilw_levs
    layer: 1
    title: Soil Moisture at 1cm
  4cm:
    <<: *soilw_levs
    layer: 2
    title: Soil Moisture at 4cm
  10cm:
    <<: *soilw_levs
    layer: 3
    title: Soil Moisture at 10cm
  30cm:
    <<: *soilw_levs
    layer: 4
    title: Soil Moisture at 30cm
  60cm:
    <<: *soilw_levs
    layer: 5
    title: Soil Moisture at 60cm
  1m:
    <<: *soilw_levs
    layer: 6
    title: Soil Moisture at 1m
  1.6m:
    <<: *soilw_levs
    layer: 7
    title: Soil Moisture at 1.6m
  3m:
    <<: *soilw_levs
    layer: 8
    title: Soil Moisture at 3m
sphum: # Specific humidity
  ua:
    ncl_name: SPFH_P0_L105_GLC0
temp: # Temperature
  2ds: # 2m - Sfc
    clevs: !!python/object/apply:numpy.arange [-16, 17, 2]
    cmap: seismic
    colors: centered_diff
    contour_colors: grey
    ncl_name: TMP_P0_L103_GLC0 # 2m Temp
    ticks: 2
    title: 2m Temp - Skin Temp
    transform: [conversions.k_to_f, field_diff]
    transform_kwargs:
      variable2: temp
      level2: sfc
    unit: F
    wind: False
  2m:
    clevs: !!python/object/apply:numpy.arange [-60, 120, 10]
    cmap: jet
    colors: t_colors
    contour_colors: grey
    ncl_name: TMP_P0_L103_GLC0
    ticks: 10
    transform: conversions.k_to_f
    unit: F
    wind: 10m
  500mb: &ua_temp
    clevs: !!python/object/apply:numpy.arange [-70, 10, 2.5]
    cmap: jet
    colors: t_colors
    contour: gh
    contour_colors: grey
    ncl_name:
      prs: TMP_P0_L100_GLC0
      nat: TMP_P0_L105_GLC0
    ticks: 5
    transform: conversions.k_to_c
    unit: C
    wind: True
  700mb:
    <<: *ua_temp
    clevs: !!python/object/apply:numpy.arange [-40, 40, 2.5]
  850mb:
    <<: *ua_temp
    clevs: !!python/object/apply:numpy.arange [-40, 40, 2.5]
  925mb:
    <<: *ua_temp
    clevs: !!python/object/apply:numpy.arange [-40, 40, 2.5]
  sfc:
    clevs: !!python/object/apply:numpy.arange [-60, 120, 10]
    cmap: jet
    colors: t_colors
    ncl_name: TMP_P0_L1_GLC0
    ticks: 20
    transform: conversions.k_to_f
    unit: F
    wind: False
  ua:
    <<: *ua_temp
totp: # Hourly total precipitation
  sfc:
    clevs: [0.002, 0.01, 0.05, 0.1, 0.25, 0.50, 0.75, 1.0, 2.0]
    cmap: gist_ncar
    colors: pcp_colors
    contour_colors: red
    ncl_name: APCP_P8_L1_GLC0_acc1h
    ticks: 0
    title: 1 hr Total Precip
    transform: conversions.kgm2_to_in
    unit: in
u:
  10m:
    ncl_name: UGRD_P0_L103_GLC0
    transform: conversions.ms_to_kt
  500mb: &ua_uwind
    ncl_name:
      prs: UGRD_P0_L100_GLC0
      nat: UGRD_P0_L105_GLC0
  700mb: *ua_uwind
  850mb: *ua_uwind
  925mb: *ua_uwind
  ua:
    <<: *ua_uwind
v:
  10m:
    ncl_name: VGRD_P0_L103_GLC0
    transform: conversions.ms_to_kt
  500mb: &ua_vwind
    ncl_name:
      prs: VGRD_P0_L100_GLC0
      nat: VGRD_P0_L105_GLC0
    transform: conversions.ms_to_kt
  700mb: *ua_vwind
  850mb: *ua_vwind
  925mb: *ua_vwind
  ua:
    <<: *ua_vwind
vil: # Vertically integrated liquid
  sfc:
    clevs: [0.05, 0.15, 0.76, 3.47, 6.92, 12, 31.6, 35, 40, 45, 50, 55, 60, 65, 70]
    cmap: precipitation
    colors: vil_colors
    ncl_name: VIL_P0_L10_GLC0
    ticks: 0
vis: # Visibility
  sfc:
    clevs: [0.0625, 0.125, 0.25, 0.5, 1, 1.5, 2, 3, 4, 5, 10, 30, 50]
    cmap: gist_ncar
    colors: vis_colors
    ncl_name: VIS_P0_L1_GLC0
    ticks: 0
    title: Sfc Visibility
    transform: [conversions.m_to_mi]
    unit: mi
vort: # Absolute vorticity
  500mb:
    clevs: !!python/object/apply:numpy.arange [6, 29, 2]
    cmap: gist_ncar
    colors: vort_colors
    contour_colors: grey
    ncl_name: ABSV_P0_L100_GLC0
    ticks: 2
    transform: conversions.vort_scale
    unit: 1E-5/s
vvel: # Vertical velocity
  700mb:
    clevs: !!python/object/apply:numpy.arange [-17, 34, 5]
    cmap: gist_ncar
    colors: vvel_colors
    contour_colors: grey
    ncl_name: VVEL_P0_L100_GLC0
    ticks: 5
    transform: conversions.vvel_scale
    unit: -Pa/s * 10
vvort: # Vertical vorticity
  mx01: &vvort # Hourly maximum of vertical vorticity over 0-2 km layer
    clevs: !!python/object/apply:numpy.arange [0.0025, 0.0301, 0.0025]
    cmap: gist_ncar
    colors: vort_colors
    layer: 0
    ncl_name: RELV_P8_2L103_GLC0_max1h
    ticks: 0
    title: 0-1km Max Vertical Velocity (over prev hour)
    unit: 1/s
  mx02: # Hourly maximum of vertical vorticity over 0-2 km layer
    <<: *vvort 
    layer: 1
    title: 0-2km Max Vertical Velocity (over prev hour)
